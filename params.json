{"name":"Wrench-js","tagline":"Recursive file operations in Node.js","body":"wrench.js - Recursive file operations in Node.js\r\n----------------------------------------------------------------------------\r\nWhile I love Node.js, I've found myself missing some functions. Things like\r\nrecursively deleting/chmodding a directory (or even deep copying a directory),\r\nor even a basic line reader, shouldn't need to be re-invented time and time again.\r\n\r\nThat said, here's my attempt at a re-usable solution, at least until something\r\nmore formalized gets integrated into Node.js (*hint hint*). wrench.js is fairly simple\r\nto use - check out the documentation/examples below:\r\n\r\nPossibly Breaking Change in v1.5.0\r\n-----------------------------------------------------------------------------\r\nIn previous versions of Wrench, we went against the OS-default behavior of not\r\ndeleting a directory unless the operation is forced. In 1.5.0, this has been\r\nchanged to be the behavior people expect there to be - if you try to copy over\r\na directory that already exists, you'll get an Error returned or thrown stating\r\nthat you need to force it.\r\n\r\nSomething like this will do the trick:\r\n\r\n``` javascript\r\nwrench.copyDirSyncRecursive('directory_to_copy', 'location_where_copy_should_end_up', {\r\n    forceDelete: true\r\n});\r\n```\r\n\r\nIf you desire the older behavior of Wrench... hit up your package.json. If you\r\nhappen to find bugs in the 1.5.0 release please feel free to file them on the \r\nGitHub issues tracker for this project, or send me a pull request and I'll get to\r\nit as fast as I can. Thanks!\r\n\r\n**If this breaks enough projects I will consider rolling it back. Please hit me up if this seems to be the case.**\r\n\r\nInstallation\r\n-----------------------------------------------------------------------------\r\n\r\n    npm install wrench\r\n\r\nUsage\r\n-----------------------------------------------------------------------------\r\n``` javascript\r\nvar wrench = require('wrench'),\r\n\tutil = require('util');\r\n```\r\n\r\n### Synchronous operations\r\n``` javascript\r\n// Recursively create directories, sub-trees and all.\r\nwrench.mkdirSyncRecursive(dir, 0777);\r\n\r\n// Recursively delete the entire sub-tree of a directory, then kill the directory\r\nwrench.rmdirSyncRecursive('my_directory_name', failSilently);\r\n\r\n// Recursively read directories contents.\r\nwrench.readdirSyncRecursive('my_directory_name');\r\n\r\n// Recursively chmod the entire sub-tree of a directory\r\nwrench.chmodSyncRecursive('my_directory_name', 0755);\r\n\r\n// Recursively chown the entire sub-tree of a directory\r\nwrench.chownSyncRecursive(\"directory\", uid, gid);\r\n\r\n// Deep-copy an existing directory\r\nwrench.copyDirSyncRecursive('directory_to_copy', 'location_where_copy_should_end_up', {\r\n    forceDelete: bool, // Whether to overwrite existing directory or not\r\n    excludeHiddenUnix: bool, // Whether to copy hidden Unix files or not (preceding .)\r\n    preserveFiles: bool, // If we're overwriting something and the file already exists, keep the existing\r\n    inflateSymlinks: bool, // Whether to follow symlinks or not when copying files\r\n    filter: regexp, // A filter to match files against; if matches, do nothing (exclude).\r\n    whitelist: bool, // if true every file or directory which doesn't match filter will be ignored\r\n});\r\n\r\n// Read lines in from a file until you hit the end\r\nvar f = new wrench.LineReader('x.txt');\r\nwhile(f.hasNextLine()) {\r\n\tutil.puts(f.getNextLine());\r\n}\r\n\r\n// Note: You will need to close that above line reader at some point, otherwise\r\n// you will run into a \"too many open files\" error. f.close() or fs.closeSync(f.fd) are\r\n// your friends, as only you know when it is safe to close.\r\n```\r\n\r\n### Asynchronous operations\r\n``` javascript\r\n// Recursively read directories contents\r\nvar files = [];\r\nwrench.readdirRecursive('my_directory_name', function(error, curFiles) {\r\n    // curFiles is what you want\r\n});\r\n\r\n// If you're feeling somewhat masochistic\r\nwrench.copyDirRecursive(srcDir, newDir, {forceDelete: bool /* See sync version */}, callbackfn);\r\n```\r\n\r\nQuestions, comments? Hit me up. (ryan [at] venodesigns.net | http://twitter.com/ryanmcgrath)\r\n","google":"UA-40660943-2","note":"Don't delete this file! It's used internally to help with page regeneration."}